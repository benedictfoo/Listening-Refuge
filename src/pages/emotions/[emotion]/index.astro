---
// src/pages/emotions/[emotion]/index.astro

import {getCollection} from 'astro:content';
import PostGridLayout from '../../../layouts/PostGridLayout.astro';
import PaginationButtons from '../../../components/PaginationButtons.astro';
import BaseLayout from "../../../layouts/BaseLayout.astro";
import {POSTS_PER_PAGE} from "../../../consts";

export async function getStaticPaths() {
    const all = await getCollection('blog');
    const emotions = Array.from(new Set(all.flatMap(p => p.data.emotions)));
    return emotions.map(emotion => ({params: {emotion}}));
}


const {emotion} = Astro.params;

const all = await getCollection('blog');
const filtered = all
    .filter(p => p.data.emotions.includes(emotion))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const page1 = filtered.slice(0, POSTS_PER_PAGE);
const totalPages = Math.ceil(filtered.length / POSTS_PER_PAGE);
const title = `Songs that evoke: ${emotion}`
const description = `Find a song which fits a particular emotion`
---

<BaseLayout title={title} description={description}>


    <PostGridLayout posts={page1} title={title}/>
    {totalPages > 1 && (
            <PaginationButtons
                    currPage={1}
                    lastPage={totalPages}
                    baseHref={`/emotions/${emotion}`}
            />
    )}
</BaseLayout>
