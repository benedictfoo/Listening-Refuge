---
import {getCollection, type CollectionEntry} from 'astro:content';
import BaseLayout from "../../layouts/BaseLayout.astro";
import PostGridLayout from "../../layouts/PostGridLayout.astro";
import {getBlogPosts} from "../../lib/content";
import {POSTS_PER_PAGE} from "../../consts";
import PaginationButtons from "../../components/PaginationButtons.astro";

export async function getStaticPaths({paginate}: { paginate: any }) {
    const posts = (await getBlogPosts()).sort(
        (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
    ).slice(POSTS_PER_PAGE)

    const paginated = await paginate(posts, {pageSize: POSTS_PER_PAGE});
    return paginated.map((pageObj, idx) => ({
        ...pageObj,
        params: {page: String(idx + 2)}
    }));
}

const {page} = Astro.props;
const realCurrentPage = page.currentPage + 1;
const totalPages = Math.ceil((await getBlogPosts()).length / POSTS_PER_PAGE);
---
<BaseLayout>
    <PostGridLayout posts={page.data}/>
    <PaginationButtons baseHref={"/blog"} currPage={realCurrentPage} lastPage={totalPages}/>
</BaseLayout>