---
// src/pages/tags/[tag]/index.astro

import {getCollection} from 'astro:content';
import PostGridLayout from '../../../layouts/PostGridLayout.astro';
import PaginationButtons from '../../../components/PaginationButtons.astro';
import BaseLayout from "../../../layouts/BaseLayout.astro";
import Prose from "../../../components/Prose.astro";

export async function getStaticPaths() {
    const all = await getCollection('blog');
    const tags = Array.from(new Set(all.flatMap(p => p.data.tags)));
    return tags.map(tag => ({params: {tag}}));
}

const POSTS_PER_PAGE = 1;
const {tag} = Astro.params;

const all = await getCollection('blog');
const filtered = all
    .filter(p => p.data.tags.includes(tag))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const page1 = filtered.slice(0, POSTS_PER_PAGE);
const totalPages = Math.ceil(filtered.length / POSTS_PER_PAGE);
---

<BaseLayout>

    <Prose>
        <h1 class="mx-auto sm:w-[33vw] ">{`Posts tagged: ${tag}`}</h1>
    </Prose>

    <PostGridLayout posts={page1}/>
    {totalPages > 1 && (
            <PaginationButtons
                    currPage={1}
                    lastPage={totalPages}
                    baseHref={`/tags/${tag}`}
            />
    )}
</BaseLayout>
